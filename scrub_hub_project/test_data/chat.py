# Use this to set up test data so you can test out the chat functionality.
# The functions defined in this file should be run through the Django shell. (See setup.py)

import base64

from authenticate.models import CustomUser as User
from scrub_hub_chat.models import Conversation

def setup():
	# Check if test data already exists
	if User.objects.filter(first_name='chattest').count() != 0:
		print('\nTest data already exists. If you need to re-run testDataSetup, first run testDataCleanup.')
		exit()

	print('\nCreating test users...')
	user_info = { 'first_name': 'chattest' } # Other fields are specified in REQUIRED_FIELDS but no errors are raised if they aren't present.
	user_info['private_key'] = '-----BEGIN ENCRYPTED PRIVATE KEY-----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-----END ENCRYPTED PRIVATE KEY-----'
	user_info['public_key'] = base64.b64decode('MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvShpsL3yZVJXB79EbXgBmEG3COHKMbVzzQCvQXVrlvJjAWzlpECEcT9ghwJkYYErzlWcQrm0a3e5AmJsEI8WpEscFyMjBybYQ/wvFF3mTTJ2+crgeT2bn1Mhmx62KTJhS59DmlBpLm6r7ZmR3+kteaM9/VcX8u2EQrDxOBgUb9VDXEo0DnsrWalX+DDc7yYUsHkmM+oRkWhsP8K8nrya/uDu51rpNh5EgE/6d/GE3BJgiiLzA3C8Yuq892P6bNYur9tc3KCoD46rgLUOYVdq+Wp7skyZW7InT8ba3abCtQZwwaJUsX6TjoYfIh00r1DGmO9eF329ZMSsChzILJtfvoXy2HwJPaqjgwmneQXNT8op1lMo98GpXAnz2TBq9TO6LmRhGpSRBoDGRMVFo3fieTD/0seZV4iq4hve9f6I1o1ISBdS+3+snf2dAeSiPM/eDr2I1o4Cw+m6llC0ktG3s1p5mieDqJrWgIWfb87bvbglFb3twwJKy8dnJ9oy1rwcNL9hb+wZXip4JheAaSvhRujEzrhsSPFGfmiwq35ftAr4mAlaO5PkVDvCvTK4WrdwgX95hzNLzS43XmsWO5jeHnAZ5sFOo47UBnoUOmw5fhf6ZqdMtrIASuB3DxHh/GnxvtggCitGd0bDlq/FIIJsu7dWQDQVe93c/wSjnU/4KTkCAwEAAQ==')
	users = []
	for i in range(3):
		u = User(last_name=str(i), email=f'chattest{i}@scrubhub.com', **user_info)
		u.set_password('test')
		u.save()
		users.append(u)

	# Not making conversations anymore, since there's a simple UI to do so.

def cleanup():
	Conversation.objects.filter(participants__user__first_name='chattest').delete()
	User.objects.filter(first_name='chattest').delete()
	# ConversationParticipant objects should be automatically deleted
